limit_req_zone $binary_remote_addr zone=front_reqs:100m rate=1r/s;
limit_req_zone $binary_remote_addr zone=views_reqs:100m rate=1r/s;
fastcgi_cache_path /cache/frontend levels=1:2 keys_zone=frontend.cache:100m max_size=32g inactive=7d use_temp_path=off;


#init_by_lua_block
#{
#    mobile_detect = require "mobile"
#}

#upstream redis
#{
#    server keydb:6379;
#
#    keepalive 1024;
#}


server {
    listen       80;
    #listen       443 ssl http2;

    server_name  .olay.az;

    client_max_body_size 10k;

    #include inc/ssl.conf;

    root /app;

    access_log  /var/log/nginx/frontend.log main;

    # include /etc/nginx/inc/views.conf;
    include /etc/nginx/inc/security.conf;
    include /etc/nginx/inc/static.conf;

    index index.php;

    location /
    {
        try_files $uri $uri/ /index.php?$args;

        # location /admin {
    	   #  auth_basic "Auth";
    	   #  auth_basic_user_file /var/www/html/general/.htpasswd;
        # }
    }

    # location = /sitemap.xml {
    #   rewrite ^(.*)$ /global/sitemap.php break;
    # }

    set $cache_key  $ua_device$host$request_method$request_uri;
    set $skip_cache 1;

    #PHP
    location ~ \.php$
    {
        limit_req zone=front_reqs burst=10 nodelay;

        limit_except GET {
            deny  all;
        }

        fastcgi_pass                    php:9000;
        fastcgi_param                   SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_split_path_info         ^(.+\.php)(/.+)$;
        
        include                         fastcgi_params;
        
        fastcgi_read_timeout            300;
        fastcgi_buffer_size             32k;
        fastcgi_buffers                 16 16k; 
        fastcgi_temp_file_write_size    64k;
        fastcgi_busy_buffers_size       64k;

        fastcgi_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_cache_key $cache_key;
        fastcgi_cache_methods GET HEAD;
        fastcgi_cache frontend.cache;
        fastcgi_cache_valid 200 30s;
        fastcgi_cache_valid 301 404 1m;
        fastcgi_cache_min_uses 1;
        fastcgi_cache_lock on;
        fastcgi_cache_use_stale updating error timeout invalid_header http_500 http_503;

        add_header X-Cache-Status $upstream_cache_status always;
        #add_header X-Cache-Key $cache_key always;
    }
}